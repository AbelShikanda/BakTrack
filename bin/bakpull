#!/bin/bash

# Get the current directory as the restore target
TARGET_DIR=$(pwd)

# Read backup destination from .bak/.bakconfig
if [ -f "$TARGET_DIR/.bak/.bakconfig" ]; then
    source "$TARGET_DIR/.bak/.bakconfig"
    EXPECTED_DEVICE=$(findmnt -rno TARGET -S LABEL="$DEVICE_LABEL" | sed 's/\\x20/ /g')
    if [ -z "$EXPECTED_DEVICE" ] || [[ "$EXPECTED_DEVICE" != "$MOUNT_POINT"* ]]; then
        echo "Error: The expected backup device ($DEVICE_LABEL) is not mounted."
        echo "please mount and try again."
        exit 1
    fi
else
    echo "It seems like your source files no longer exist or are corrupted"
    echo "to retrieve all your files"
    echo "Run: bak restore -lost"
    exit 1
fi



# Check if backup destination exists
if [ ! -d "$BACKUP_DEST" ]; then
    echo "Backup destination does not exist"
    echo "Run: bak config set mount </path/to/mount"
    exit 1
fi

# Log file path
LOG_FILE=~/BackupVersionControl/restore.log

    # Log start time
echo -e "\n$(date '+%Y-%m-%d %H:%M:%S') - Restore Started" | tee -a "$LOG_FILE"
echo "Source: $BACKUP_DEST" | tee -a "$LOG_FILE"
echo "Destination: $TARGET_DIR" | tee -a "$LOG_FILE"
echo "-------------------------------------" | tee -a "$LOG_FILE"

# Perform the actual restore
sudo -u "$BACKUP_USER" rsync -av --no-perms --omit-dir-times "$BACKUP_DEST/" "$TARGET_DIR/" 2>&1 | tee -a "$LOG_FILE"

echo "Restore completed: $BACKUP_DEST â†’ $TARGET_DIR" | tee -a "$LOG_FILE"
echo "-------------------------------------" | tee -a "$LOG_FILE"
echo "$(date '+%Y-%m-%d %H:%M:%S') - Restore Completed" | tee -a "$LOG_FILE"

